package ui;

import model.Book;
import util.InputHelper;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;


import java.io.*; //–¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏


public class ConsoleMenu {
    private List<Book> books;
    private boolean isRunning;

    public ConsoleMenu() {
        //–æ—Å–Ω–æ–≤–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –≤—Å–µ–≥–æ –∫–ª–∞—Å—Å–∞
        this.books = new ArrayList<>();
        // –¥–ª—è —É–ø—Ä–∞–≤–ª –≥–ª–∞–≤–Ω—ã–º —Ü–∏–∫–ª–æ–º –ø—Ä–æ–≥–∏
        this.isRunning = true;
    }

    // –≥–ª–∞–≤–Ω–π –º–µ—Ç–æ–¥ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    public void start() {
        System.out.println("___–ë–ò–ë–õ–ò–û–¢–ï–ß–ù–´–ô –ú–ï–ù–ï–î–ñ–ï–†___");
        System.out.println("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!");

        // –ø—Ä–æ–≥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–∫–∞ —Å–∞–º–∏ –Ω–µ –≤—ã–π–¥–µ–º
        while (isRunning) {
            try {
                showMainMenu();
            } catch (Exception e) {
                // –¥–ª—è –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫ –≤ –º–µ–Ω—é—à–∫–µ
                System.out.println("–Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ –º–µ–Ω—é: " + e.getMessage());
                System.out.println("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...");
            }
        }
    }

    // –ø–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    private void showMainMenu() {
        System.out.println("\n ___–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ___");
        System.out.println("1. –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É");
        System.out.println("2. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–∏–≥—É");
        System.out.println("3. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–Ω–∏–≥–∏");
        System.out.println("4. –ü—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫");
        System.out.println("5. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª");
        System.out.println("6. –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ —Ñ–∞–π–ª–∞");
        System.out.println("7. –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø–æ–∏—Å–∫ –ø–æ –∞—Ç—Ä–∏–±—É—Ç–∞–º");
        System.out.println("0. –í—ã—Ö–æ–¥");


        // –∏–∑ InputHelper.java, –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∏–Ω—Ç–æ–≤–æ–≥–æ —á–∏—Å–ª–∞ —Å –¥–∏–∞–ø–∞–∑–æ–Ω–æ–º (0, 7)
        int choice = InputHelper.readInt("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: ", 0, 7);
        processMenuChoice(choice);
    }

    // –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–∑ –º–µ–Ω—é
    private void processMenuChoice(int choice) {
        try {
            // –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π switch-expression –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞
            switch (choice) {
                case 1 -> addBook();             // –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É
                case 2 -> editBook();            // —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–∏–≥—É
                case 3 -> showAllBooks();        // –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–Ω–∏–≥–∏
                case 4 -> findBook();            // –ø—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ –∫–Ω–∏–≥–∏ (–ø–æ –≤—Å–µ–º –ø–æ–ª—è–º)
                case 5 -> saveToFile();          // —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª
                case 6 -> loadFromFile();        // –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ —Å—É—â —Ñ–∞–π–ª–∞
                case 7 -> searchByAttributes();  // –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø–æ–∏—Å–∫ –ø–æ –∞—Ç—Ä–∏–±—É—Ç–∞–º
                case 0 -> exitProgram();         // –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                default -> System.out.println("–Ω–µ–≤–µ—Ä–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ç 0 –¥–æ 7.");
            }
        } catch (Exception e) {
            // –¥–ª—è –æ—à–∏–±–æ–∫ –≤ –º–µ—Ç–æ–¥–∞—Ö –º–µ–Ω—é
            System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏: " + e.getMessage());
        }
    }

    //_______–î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–û–í–û–ô –ö–ù–ò–ì–ò____////
    private void addBook() {
        System.out.println("\nüìñ ___–î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–û–í–û–ô –ö–ù–ò–ì–ò___");

        // InputHelper.readNonEmptyString –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –≤–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ (–Ω–µ–ø—É—Å—Ç–æ–π)
        String title = InputHelper.readNonEmptyString("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏: ");
        String author = InputHelper.readNonEmptyString("–í–≤–µ–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∞: ");
        String isbn = InputHelper.readNonEmptyString("–í–≤–µ–¥–∏—Ç–µ ISBN: ");

        // readYear –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –≥–æ–¥–∞ (–æ—Ç 1000 –¥–æ —Ç–µ–∫—É—â–≥–æ)
        int year = InputHelper.readYear("–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è: ");
        String genre = InputHelper.readNonEmptyString("–í–≤–µ–¥–∏—Ç–µ –∂–∞–Ω—Ä: ");


        Book newBook = new Book(title, author, isbn, year, genre); //–≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –ø–æ—ç—Ç–æ–º—É —Å–æ–∑–¥–∞–µ–º
        books.add(newBook);

        System.out.println("–ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!");
        System.out.println(newBook);
    }

    //__________—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –ø–æ–ª–µ–π___
    private void editBook() {
        System.out.println("\n ___–†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –ö–ù–ò–ì–ò___");

        if (books.isEmpty()) {
            System.out.println("–°–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ –ø—É—Å—Ç -> –Ω–µ—á–µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å.");
            return;
        }


        showAllBooks(); // —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —á–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å

        // –ø–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –∏–Ω–¥–µ–∫—Å –∫–Ω–∏–≥–∏ –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–≤–∞—Ç—å
        int index = InputHelper.readListIndex("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–Ω–∏–≥–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ", books.size());

        Book book = books.get(index);

        processFieldSelection(book);  // –≤—ã–±–æ—Ä –ø–æ–ª–µ–π –¥–ª—è —Ä–µ–∞–¥–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    }


    private void showFieldSelectionMenu(Book book) {
        System.out.println("\n ___–í–´–ë–ï–†–ò–¢–ï –ü–û–õ–Ø –î–õ–Ø –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø___");
        System.out.println("–¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏:");
        System.out.println(book);

        System.out.println("\n–ö–∞–∫–∏–µ –ø–æ–ª—è –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?");
        System.out.println("1. –ù–∞–∑–≤–∞–Ω–∏–µ (—Ç–µ–∫—É—â–µ–µ: " + book.getTitle() + ")");
        System.out.println("2. –ê–≤—Ç–æ—Ä (—Ç–µ–∫—É—â–∏–π: " + book.getAuthor() + ")");
        System.out.println("3. ISBN (—Ç–µ–∫—É—â–∏–π: " + book.getIsbn() + ")");
        System.out.println("4. –ì–æ–¥ –∏–∑–¥–∞–Ω–∏—è (—Ç–µ–∫—É—â–∏–π: " + book.getYear() + ")");
        System.out.println("5. –ñ–∞–Ω—Ä (—Ç–µ–∫—É—â–∏–π: " + book.getGenre() + ")");
        System.out.println("6. –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å");

        System.out.println("\n –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –ø–æ–ª–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1,3,5)");
        System.out.println("   –∏–ª–∏ –æ–¥–∏–Ω –Ω–æ–º–µ—Ä –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –ø–æ–ª—è");
    }

    // –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–µ–π
    private void processFieldSelection(Book book) {
        boolean editing = true;

        while (editing) {
            showFieldSelectionMenu(book);

            String input = InputHelper.readNonEmptyString("–í–∞—à –≤—ã–±–æ—Ä: ");


            if (input.equals("6")) {  // 6 - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–¥–∞–∫–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
                System.out.println("–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!");
                editing = false;
            } else {
                editSelectedFields(book, input);//—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ–ª—è
            }
        }
    }

    //—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª–µ–π
    private void editSelectedFields(Book book, String fieldNumbers) {
        try {
            String[] numbers = fieldNumbers.split(",");
            boolean anyFieldEdited = false;  // —Ñ–ª–∞–≥ –¥–ª—è –≤—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞

            for (String numberStr : numbers) {
                String trimmedNumber = numberStr.trim();

                if (!trimmedNumber.isEmpty()) {
                    int fieldNumber = Integer.parseInt(trimmedNumber);

                    // —Ñ–ª–∞–≥ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—è
                    boolean fieldWasEdited = switch (fieldNumber) {
                        case 1 -> {
                            String newTitle = InputHelper.readNonEmptyString("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ");
                            book.setTitle(newTitle);
                            System.out.println("–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!");
                            yield true; // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º tru –¥–ª—è fieldNumber –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç  fieldWasEdited
                        }
                        case 2 -> {
                            String newAuthor = InputHelper.readNonEmptyString("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–≥–æ –∞–≤—Ç–æ—Ä–∞: ");
                            book.setAuthor(newAuthor);
                            System.out.println("–ê–≤—Ç–æ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω!");
                            yield true;
                        }
                        case 3 -> {
                            String newIsbn = InputHelper.readNonEmptyString("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π ISBN: ");
                            book.setIsbn(newIsbn);
                            System.out.println("ISBN –æ–±–Ω–æ–≤–ª–µ–Ω!");
                            yield true;
                        }
                        case 4 -> {
                            int newYear = InputHelper.readYear("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è: ");
                            book.setYear(newYear);
                            System.out.println("–ì–æ–¥ –∏–∑–¥–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω!");
                            yield true;
                        }
                        case 5 -> {
                            String newGenre = InputHelper.readNonEmptyString("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∂–∞–Ω—Ä: ");
                            book.setGenre(newGenre);
                            System.out.println("–ñ–∞–Ω—Ä –æ–±–Ω–æ–≤–ª–µ–Ω!");
                            yield true;
                        }
                        default -> {
                            System.out.println("–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—è: " + fieldNumber + ". –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: 1-5");
                            yield false;
                        }
                    };

                    if (fieldWasEdited) {   // –µ—Å–ª–∏ —Ö–æ—Ç—å –æ–¥–Ω–æ –ø–æ–º–µ–Ω—è–ª–∏
                        anyFieldEdited = true; // —Ç–æ –±—ã–ª–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
                    }
                }
            }

            if (anyFieldEdited) {
                System.out.println("–í—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ–ª—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!");
            } else {
                System.out.println("–ù–µ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—è.");
            }

        } catch (NumberFormatException e) { //–æ—à–∏–±–±–∫–∏ –≤ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ —á–∏—Å–µ–ª
            System.out.println("–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –ø–æ–ª–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1,3,5)");
        } catch (Exception e) {  // –≤—Å–µ –æ—à–∏–±–∫–∏
            System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: " + e.getMessage());
        }
    }

    // –ú–µ—Ç–æ–¥ –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö –∫–Ω–∏–≥
    private void showAllBooks() {
        System.out.println("\n ___–í–°–ï –ö–ù–ò–ì–ò –í –ë–ò–ë–õ–ò–û–¢–ï–ö–ï___");

        if (books.isEmpty()) {
            System.out.println("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—É—Å—Ç–∞. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é –∫–Ω–∏–≥—É!");
            return;
        }

        //–≤—ã–≤–æ–¥ –∫–Ω–∏–≥
        for (int i = 0; i < books.size(); i++) {
            System.out.println((i + 1) + ". " + books.get(i));
        }
        System.out.println("–í—Å–µ–≥–æ –∫–Ω–∏–≥: " + books.size());
    }



    //_____–ü–†–û–î–í–ò–ù–£–¢–´–ô –ü–û–ò–°–ö –ü–û –ê–¢–†–ò–ë–£–¢–ê–ú____

    private void searchByAttributes() {
        System.out.println("\n ___–ü–†–û–î–í–ò–ù–£–¢–´–ô –ü–û–ò–°–ö –ö–ù–ò–ì –ü–û –ê–¢–†–ò–ë–£–¢–ê–ú___");

        if (books.isEmpty()) {
            System.out.println("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—É—Å—Ç–∞. –ù–µ—á–µ–≥–æ –∏—Å–∫–∞—Ç—å.");
            return;
        }

        System.out.println("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º —á—Ç–æ–±—ã –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–µ:");

        // –∑–∞–ø—Ä–∞—à–∏–≤–µ–º –ø–æ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞ (–Ω–µ –∏–∑ ImputHelper —Ç–∞–∫ –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞ —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π
        String title = getOptionalInput("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏: ");
        String author = getOptionalInput("–ê–≤—Ç–æ—Ä: ");
        String genre = getOptionalInput("–ñ–∞–Ω—Ä: ");
        String isbn = getOptionalInput("ISBN: ");

        // –≥–æ–¥–∞ —Ç–∞–∫–∂–µ –º–æ–∂–µ–º –Ω–µ –≤–≤–æ–¥–∏—Ç—å, —á—Ç–æ–±—ã –∏—Å–∫–∞—Ç—å –ø–æ –≤—Å–µ–º –≥–æ–¥–∞–º
        Integer minYear = null;
        Integer maxYear = null;

        System.out.println("\n–ü–æ–∏—Å–∫ –ø–æ –≥–æ–¥—É:");
        System.out.println("–û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –ª—é–±–æ–≥–æ –≥–æ–¥–∞");

        String minYearInput = getOptionalInput("   –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≥–æ–¥: ");
        String maxYearInput = getOptionalInput("   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≥–æ–¥: ");

        try {

            if (!minYearInput.isEmpty()) minYear = Integer.parseInt(minYearInput); // –µ—Å–ª–∏ –Ω–µ –ø—É—Å—Ç–æ, —Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –º–∏–Ω –∏ –º–∞–∫—Å –≥–æ–¥–∞
            if (!maxYearInput.isEmpty()) maxYear = Integer.parseInt(maxYearInput);
        } catch (NumberFormatException e) { // –æ–±—Ä–∞–±–æ—Ç–∫–∞ —á–∏—Å–µ–ª
            System.out.println("–û—à–∏–±–∫–∞. –ì–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º (–ø–æ–∏—Å–∫ –ø–æ –≥–æ–¥—É –±—É–¥–µ—Ç –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω :(");
        }

        // —Å–∞–º –ø–æ–∏—Å–∫
        List<Book> searchResults = performSearch(title, author, genre, isbn, minYear, maxYear);

        // –≤—ã–≤–æ–¥ —Ä–µ–∑–æ–≤
        displaySearchByAttributesResults(searchResults, title, author, genre, isbn, minYear, maxYear);
    }
    // –¥–ª—è –≤–≤–æ–¥–∞ –ø—É—Å—Ç—ã—Ö –∏ –Ω–µ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫
    private String getOptionalInput(String prompt) {
        System.out.print(prompt);
        String input = new Scanner(System.in).nextLine().trim();
        return input;
    }

    // –ø–æ–∏—Å–∫
    private List<Book> performSearch(String title, String author, String genre, String isbn,
                                     Integer minYear, Integer maxYear) {
        List<Book> results = new ArrayList<>();

        for (Book book : books) {
            boolean matches = true; // —Ñ–ª–∞–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ –∞—Ç—Ä–∏–±—É—Ç–∞–º

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –∫—Ä–∏—Ç–µ—Ä–∏–π, –µ—Å–ª–∏ –æ–Ω –Ω–µ –ø—É—Å—Ç–æ–π –∏ containsIgnoreCase - –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ –±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞
            // –µ—Å–ª–∏ –Ω–µ –ø—É—Å—Ç–æ –∏ containsIgnoreCase –≤—ã–¥–∞–ª–æ false(–Ω–µ—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ)  ->  matches = false (—Ç–æ –µ—Å—Ç—å —ç—Ç–∞ –∫–Ω–∏–≥–∞ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç)

            if (!title.isEmpty() && !containsIgnoreCase(book.getTitle(), title)) {
                matches = false;
            }

            if (!author.isEmpty() && !containsIgnoreCase(book.getAuthor(), author)) {
                matches = false;
            }

            if (!genre.isEmpty() && !containsIgnoreCase(book.getGenre(), genre)) {
                matches = false;
            }

            if (!isbn.isEmpty() && !containsIgnoreCase(book.getIsbn(), isbn)) {
                matches = false;
            }

            // –ø—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ–¥ –ø–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É –µ—Å–ª–∏ –Ω –µ—Å—Ç—å
            if (minYear != null && book.getYear() < minYear) {
                matches = false;
            }

            if (maxYear != null && book.getYear() > maxYear) {
                matches = false;
            }

            if (matches) { // –µ—Å–ª–∏ –Ω–∏ —Ä–∞–∑—É –Ω–µ –æ–ø—É—Å—Ç–∏–ª–∏ —Ñ–ª–∞–≥, —Ç–æ —Å–ª–æ–≤–æ –Ω–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç
                results.add(book);
            }
        }

        return results;
    }

    // —Å–ø–µ—Ü –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ –±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞
    // —Ç–æ –µ—Å—Ç—å —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ç–æ–≥–æ, —á—Ç–æ –∏—â–µ–º —Å —Ç–µ–º —Å—Ä–µ–¥–∏ —á–µ–≥–æ –∏—â–µ–º
    private boolean containsIgnoreCase(String source, String search) {
        if (source == null || search == null) return false;
        return source.toLowerCase().contains(search.toLowerCase());
    }

    // –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞______

    //–ø–µ—Ä–µ–¥–∞–µ–º –º–∞—Å—Å–∏–≤ res —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ –∫–Ω–∏–≥–∞–º–∏ –∏ –∫—Ä–∏—Ç–µ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–≤–æ–¥–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    private void displaySearchByAttributesResults(List<Book> results, String title, String author,
                                      String genre, String isbn, Integer minYear, Integer maxYear) {
        System.out.println("\n ___–†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–û–ò–°–ö–ê___");

        // –∫—Ä–∏—Ç–µ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏
        System.out.println("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏:");
        List<String> criteria = new ArrayList<>();
        if (!title.isEmpty()) criteria.add("–ù–∞–∑–≤–∞–Ω–∏–µ: \"" + title + "\"");
        if (!author.isEmpty()) criteria.add("–ê–≤—Ç–æ—Ä: \"" + author + "\"");
        if (!genre.isEmpty()) criteria.add("–ñ–∞–Ω—Ä: \"" + genre + "\"");
        if (!isbn.isEmpty()) criteria.add("ISBN: \"" + isbn + "\"");
        if (minYear != null) criteria.add("–ì–æ–¥ –æ—Ç: " + minYear);
        if (maxYear != null) criteria.add("–ì–æ–¥ –¥–æ: " + maxYear);

        if (criteria.isEmpty()) {
            showAllBooks();
        } else {
            for (String criterion : criteria) {
                System.out.println("   " + criterion);
            }
        }

        // –≤—ã–≤–æ–¥ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–Ω–∏–≥
        if (results.isEmpty()) {
            System.out.println("\n –ö–Ω–∏–≥–∏ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");
        } else {
            System.out.println("\n–ù–∞–π–¥–µ–Ω–æ –∫–Ω–∏–≥: " + results.size());
            for (int i = 0; i < results.size(); i++) {
                System.out.println((i + 1) + ". " + results.get(i));
            }
        }
    }


    //_________–°–û–•–†–ê–ù–ï–ù–ò–ï –í –§–ê–ô–õ_________

    private void saveToFile() {
        System.out.println("\nüíæ ___–°–û–•–†–ê–ù–ï–ù–ò–ï –í –§–ê–ô–õ___");

        if (books.isEmpty()) {
            System.out.println("—Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ –ø—É—Å—Ç -> –Ω–µ—á–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å");
            return;
        }

        // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        String fileName = InputHelper.readNonEmptyString("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: books.csv): ");

        try {
            // import java.io.*; —Å–¥–µ–ª–∞–ª–∏ –≤–Ω–∞—á–∞–ª–µ, —á—Ç–æ–±—ã —é–∑–∞—Ç—å –≤—Å–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏
            // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª

            FileWriter fileWriter = new FileWriter(fileName); // –±–∞–∑–æ–≤—ã–π
            PrintWriter writer = new PrintWriter(fileWriter); // —É–º–Ω–∞—è –æ–±–µ—Ä—Ç–∫–∞ —Å —á–µ—Ç–∫–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ—Å

            //  –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –∫–Ω–∏–≥—É –≤ —Ñ–∞–π–ª
            for (Book book : books) {
                // CSV —Ñ–æ—Ä–º–∞—Ç
                String line = book.getTitle() + "," +
                        book.getAuthor() + "," +
                        book.getIsbn() + "," +
                        book.getYear() + "," +
                        book.getGenre();
                writer.println(line);
            }

            writer.close(); // –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª!!!!
            System.out.println("–ö–Ω–∏–≥–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: " + fileName);
            System.out.println("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–Ω–∏–≥: " + books.size());

        } catch (IOException e) { //–æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø–µ—Ä–∞—Ü–∏—è—Ö –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞
            System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: " + e.getMessage());
        }
    }


    //________________–ó–ê–ì–†–£–ó–ö–ê –ò–ó –§–ê–ô–õ–ê______
    private void loadFromFile() {
        System.out.println("\nüìÇ ___–ó–ê–ì–†–£–ó–ö–ê –ò–ó –§–ê–ô–õ–ê___");


        // –Ω—É–∂–Ω–æ –ø–æ–∂–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ –∫–Ω–∏–≥–∏ –µ—Å—Ç—å
        if (!books.isEmpty()) {
            System.out.println("–í —Ç–µ–∫—É—â–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ —É–∂–µ –µ—Å—Ç—å " + books.size() + " –∫–Ω–∏–≥.");

            // –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ auto_save.csv
            System.out.println("–°–æ–∑–¥–∞–µ—Ç—Å—è —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö...");
            autoSave();


            //InputHelper.confirm() –ø–æ–ª—É—á–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–µ–ª–∞–µ—Ç + "–¥–∞/–Ω–µ—Ç"
            // –∑–∞—Ç–µ–º –ø—Ä–æ—Å—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ –¥–∞ –∏–ª–∏ –Ω–µ—Ç, –µ—Å–ª–∏ –¥–∞ -> –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –Ω–µ—Ç -> –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false
            if (!InputHelper.confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–µ –∫–Ω–∏–≥–∏? –°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ñ–∞–π–ª auto_save.csv, —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º —Å–µ—Å—Å–∏–∏")) {
                // –µ—Å–ª–∏  InputHelper.confirm –≤–µ—Ä–Ω—É–ª–æ false(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª false) -> –∑–∞–≥—Ä—É–∑–∫—É –æ—Ç–º–µ–Ω—è–µ–º
                System.out.println("–ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.");
                return;
            }
        }

        String fileName = InputHelper.readNonEmptyString("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏: ");

        try {
            // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞
            FileReader fileReader = new FileReader(fileName);     //–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ Writer
            BufferedReader reader = new BufferedReader(fileReader);

            // –æ—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–∫–æ –∫–Ω–∏–≥
            books.clear();

            String line;
            int loadedCount = 0; // –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
            int errorCount = 0; //–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ

            // —á–∏—Ç–∞–µ–º —Ñ–∞–π–ª –ø–æ—Å—Ç—Ä–æ—á–Ω–æ
            while ((line = reader.readLine()) != null) {
                try {
                    // –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
                    if (line.trim().isEmpty()) {
                        continue;
                    }

                    // –≤ –º–∞—Å—Å–∏–≤ –ø–æ –∑–∞–ø—è—Ç—ã–º
                    String[] parts = line.split(",");

                    // –≤ —Å—Ç—Ä–æ–∫–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 5 –ø–æ–ª–µ–π
                    if (parts.length == 5) {

                        try {
                            // –±–µ—Ä–µ–º –∏–∑ –º–∞—Å—Å–∏–≤–∞ –ø–æ parts –ø–æ –∏–Ω–¥–µ–∫—Å–∞–º, –∑–Ω–∞—á–µ–Ω–∏—è, —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–µ –ø–æ–ª—è–º –∫–Ω–∏–≥–∏ (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤)
                            String title = parts[0].trim();   //
                            String author = parts[1].trim();
                            String isbn = parts[2].trim();
                            int year = Integer.parseInt(parts[3].trim());
                            String genre = parts[4].trim();

                            // –≤—ã–∑—ã–≤–∞–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∏ –ø–µ—Ä–µ–¥–∞–µ–º —Ç—É–¥–∞ –∫–∞–∫ —Ä–∞–∑ –ø–æ–ª—è –∫–Ω–∏–≥–∏ –∏–∑ —Ñ–∞–π–ª–∞
                            Book book = new Book(title, author, isbn, year, genre);
                            books.add(book);
                            loadedCount++;
                        } catch (NumberFormatException e) { // —Ñ–æ—Ä–º–∞—Ç—ã —Å—Ç—Ä–æ–∫
                            System.out.println("–û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ (–Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≥–æ–¥–∞): " + line);
                            System.out.println("   –ü—Ä–∏—á–∏–Ω–∞: " + e.getMessage());
                            errorCount++;
                        } catch (IllegalArgumentException e) { //–ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –∏–ª–∏ –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç
                            System.out.println("–û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ (–Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏): " + line);
                            System.out.println("   –ü—Ä–∏—á–∏–Ω–∞: " + e.getMessage());
                            errorCount++;
                        }
                    } else {
                        System.out.println("–û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ: " + line);
                        System.out.println("–û–∂–∏–¥–∞–µ—Ç—Å—è 5 –ø–æ–ª–µ–π, –≤ —Ñ–∞–π–ª–µ: " + parts.length);
                        errorCount++;
                    }

                } catch (Exception e) {
                    System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–æ–∫–∏: " + line);
                    System.out.println("   –ü—Ä–∏—á–∏–Ω–∞: " + e.getMessage());
                    errorCount++;
                }
            }

            reader.close(); // –í–∞–∂–Ω–æ: –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª

            System.out.println("–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
            System.out.println("–£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∫–Ω–∏–≥: " + loadedCount);
            if (errorCount > 0) {
                System.out.println("–û—à–∏–±–æ–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: " + errorCount);
            }

        } catch (FileNotFoundException e) { //–Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞–π—Ç–∏ –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø—É—Ç–∏.
            System.out.println("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: " + fileName);
        } catch (IOException e) { //–æ—à–∏–±–∫–∏ –≤ –æ–ø–µ—Ä–∞—Ü–∏—è—Ö –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞
            System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: " + e.getMessage());
        }
    }

    // _____–ê–í–¢–û–°–û–•–†–ê–ù–ï–ù–ò–ï –° –í–†–ï–ú–ï–ù–ï–ú, –î–ê–¢–û–ô –ò –ò–°–¢–û–†–ò–ï–ô –ö–ù–ò–ì
    private void autoSave() {

        if (books.isEmpty()) {
            return;
        }

        String fileName = "auto_save.csv"; // –≤ –Ω–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º

        try {
            // —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
            File file = new File(fileName);
            boolean fileExists = file.exists();

            // FileWriter(fileName, true –µ—Å–ª–∏ –¥–æ–∑–∞–ø–∏—Å–∞—Ç—å, false –µ—Å–ª–∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å)
            PrintWriter writer = new PrintWriter(new FileWriter(fileName, true));

            // –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–æ–≤—ã–π –∏–ª–∏ –ø—É—Å—Ç–æ–π -> –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            if (!fileExists || file.length() == 0) {
                writer.println("___–ê–í–¢–û–°–û–•–†–ê–ù–ï–ù–ò–ï –ë–ò–ë–õ–ò–û–¢–ï–ö–ò___");
                writer.println("–§–æ—Ä–º–∞—Ç:--- –°–ï–°–°–ò–Ø: –¥–∞—Ç–∞_–≤—Ä–µ–º—è | \n –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ \n –Ω–∞–∑–≤–∞–Ω–∏–µ,–∞–≤—Ç–æ—Ä,isbn,–≥–æ–¥,–∂–∞–Ω—Ä");
                writer.println();
            }
            //     writer.println("hello") - –ø–µ—á–∞—Ç–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —Ñ–∞–π–ª

            // —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º____
            String timestamp = java.time.LocalDateTime.now().format(
                    java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")
            );
            writer.println("--- –°–ï–°–°–ò–Ø: " + timestamp + " ---");
            writer.println("–ö–Ω–∏–≥ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ: " + books.size());

            // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –∫–Ω–∏–≥—É –≤ —Ñ–∞–π–ª
            for (Book book : books) {
                // —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É (, , ,...)
                String line = book.getTitle() + "," +
                        book.getAuthor() + "," +
                        book.getIsbn() + "," +
                        book.getYear() + "," +
                        book.getGenre();
                writer.println(line); //
            }

            // —á—Ç–æ–± —Å–µ—Å—Å–∏–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç—å
            writer.println();

            writer.close(); //–ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –Ω–∞ –¥–∏—Å–∫!!
            System.out.println("–î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: " + fileName);
            System.out.println("–í—Ä–µ–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: " + timestamp);

        } catch (IOException e) {
            System.out.println("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ");
        }
    }


    /// –ü–†–û–°–¢–û–ô –ü–û–ò–°–ö –ö–ù–ò–ì–ò –ü–û –í–°–ï–ú –ü–û–õ–Ø–ú-------------
    private void findBook() {
        System.out.println("\nüîç ___–ü–†–û–°–¢–û–ô –ü–û–ò–°–ö –ö–ù–ò–ì–ò___");

        if (books.isEmpty()) {
            System.out.println("–±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—É—Å—Ç–∞ -> –Ω–µ—á–µ–≥–æ –∏—Å–∫–∞—Ç—å.");
            return;
        }

        System.out.println("–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:");
        System.out.println("–ü–æ–∏—Å–∫ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, –∞–≤—Ç–æ—Ä—É, –∂–∞–Ω—Ä—É –∏ ISBN");

        String searchQuery = InputHelper.readNonEmptyString("–ü–æ–∏—Å–∫: ").toLowerCase();

        // —Å–æ–∑—Ä–∞–Ω—è–µ–º —Ä–µ–∑—ã –ø–æ–∏—Å–∫–∞ –≤ List (performSimpleSearch –≤—ã–¥–∞–µ—Ç List)
        List<Book> results = performSimpleSearch(searchQuery);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        displaySimpleSearchResults(results, searchQuery);
    }

    // –ê–õ–ì–û–†–ò–¢–ú –ü–û–ò–°–ö–ê
    private List<Book> performSimpleSearch(String searchQuery) {
        List<Book> results = new ArrayList<>();

        for (Book book : books) {
            // –æ–ø—è—Ç—å –∏—Å–ø–æ–ª—å–∑—É–µ–º containsIgnoreCase (–ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥—Å—Ç—Ä–æ–∫—É –∑–∞–ø—Ä–æ—Å–∞ –≤ —Å—Ç—Ä–æ–∫–µ —Å –∫–∞–∂–¥—ã–º –∞—Ç—Ä–∏–±—É–æ–º –∫–∞–∂–¥–æ–π –∫–Ω–∏–≥–∏
            // –µ—Å–ª–∏ —Ö–æ—Ç—å –æ–¥–Ω–æ –∏—Å—Ç–∏–Ω–Ω–æ, —Ç–æ –∑–Ω–∞—á–∏—Ç –¥–æ–±–∞–≤–ª—è–µ–º –≤ result —ç—Ç—É –∫–Ω–∏–≥—É
            boolean matches = containsIgnoreCase(book.getTitle(), searchQuery) ||
                    containsIgnoreCase(book.getAuthor(), searchQuery) ||
                    containsIgnoreCase(book.getGenre(), searchQuery) ||
                    containsIgnoreCase(book.getIsbn(), searchQuery);

            // –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ–¥ (–ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —á–∏—Å–ª–æ –≤ —Å—Ç—Ä–æ–∫—É)
            try {
                String yearString = String.valueOf(book.getYear());
                if (yearString.contains(searchQuery)) {
                    matches = true;
                }
            } catch (Exception e) {
                // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≥–æ–¥–∞
            }

            if (matches) {
                results.add(book);
            }
        }

        return results;
    }

    // –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–æ–∏—Å–∫–∞
    private void displaySimpleSearchResults(List<Book> results, String searchQuery) {
        System.out.println("\n___–†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–û–ò–°–ö–ê___");
        System.out.println("–ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: \"" + searchQuery + "\"");

        if (results.isEmpty()) {
            System.out.println("\n–ö–Ω–∏–≥–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É \"" + searchQuery + "\" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");
        } else {
            System.out.println("\n–ù–∞–π–¥–µ–Ω–æ –∫–Ω–∏–≥: " + results.size());
            for (int i = 0; i < results.size(); i++) {
                System.out.println((i + 1) + ". " + results.get(i));
            }

        }
    }

    // –ú–µ—Ç–æ–¥ –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã
    private void exitProgram() {
        System.out.println("\n ___–í–´–•–û–î –ò–ó –ü–†–û–ì–†–ê–ú–ú–´___");
        //–æ–ø—è—Ç—å InputHelper.confirm() –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–µ—Ç–ª—å –≤–≤–µ–¥–µ—Ç –¥–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω–µ—Ç true –∏–Ω–∞—á–µ false
        if (InputHelper.confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?")) {
            // d–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º
            if (!books.isEmpty()) {
                System.out.println("üíæ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...");
                autoSave();
            }

            System.out.println("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è :)");
            isRunning = false;
        } else {
            System.out.println("–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É :)");
        }
    }
}